apply plugin: 'scala'
apply plugin: 'idea'




repositories {
    mavenCentral()
}


dependencies {
    ext.gatlingVersion = '2.2.5'
    compile group: 'io.gatling', name: 'gatling-app', version: gatlingVersion
    compile group: 'io.gatling', name: 'gatling-recorder', version: gatlingVersion
    compile group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: gatlingVersion


}

def logbackGatlingConfig() {
    return sourceSets.test.resources.find { it.name == 'logback.xml' };
}


task incaLoadTest(type: JavaExec) {
    dependsOn testClasses
    description = "Query Profile API"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
           "-Dlogback.configurationFile=${logbackGatlingConfig()}",
    ]
    main = "io.gatling.app.Gatling"
    args = [
            "--simulation", "performance.simulations.Injector",
            "--results-folder", "${buildDir}/gatling-results",

    ]
}



task sandboxGreenSanityLoadTest(type: JavaExec) {
    dependsOn testClasses
    description = "Query Profile API"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
            "-Dlogback.configurationFile=${logbackGatlingConfig()}",
    ]
    main = "io.gatling.app.Gatling"
    args = [
            "--simulation", "performance.simulations.Injector_SandboxGreen",
            "--results-folder", "${buildDir}/gatling-results",

    ]
}


task queryUserProfileLoadTest(type: JavaExec) {
    dependsOn testClasses
    description = "Query Profile API"
    group = "Load Test"
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
            "-Dlogback.configurationFile=${logbackGatlingConfig()}",
    ]
    main = "io.gatling.app.Gatling"
    args = [
            "--simulation", "performance.simulations.Injector_QueryUserProfile",
            "--results-folder", "${buildDir}/gatling-results",

    ]
}